using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;

namespace ProjectEuler
{
    ///<summary>
    ///Even Fibonacci numbers
    ///</summary>
    ///<remarks>
    ///Each new term in the Fibonacci sequence is generated by adding the 
    ///previous two terms. By starting with 1 and 2, the first 10 terms will be:
    ///1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    ///By considering the terms in the Fibonacci sequence whose values do not 
    ///exceed four million, find the sum of the even-valued terms.
    ///</remarks>
     
    public class Problem2
    {
        private int _maxValue = 0;
        public string Answer => _getOutput();
        public HashSet<int> FibonacciSequence => _getFibonacciSequence(_maxValue);        

        public Problem2(int maxValue)
        {            
            _maxValue = maxValue;
            "*Problem 2*".ToConsole();
        }

        private HashSet<int> _getFibonacciSequence(int maxVal)
        {            
            HashSet<int> fib = new HashSet<int> { };
            if (maxVal <= 0) return fib;
            fib.Add(1);
            if (maxVal == 1)
            {
                return fib;
            }
            fib.Add(2);
            if (maxVal == 2)
            {
                return fib;
            }
            int previous = fib.Count - 1;
            int nextPrevious = fib.Count - 2;
            int newValue = fib.ElementAt(previous) + fib.ElementAt(nextPrevious);

            while (newValue < maxVal)
            {
                fib.Add(newValue);
                previous = fib.Count - 1;
                nextPrevious = fib.Count - 2;
                newValue = fib.ElementAt(previous) + fib.ElementAt(nextPrevious);
            }
            return fib;
        }

        private string _getOutput()
        {
            var fib = FibonacciSequence.SelectEvens();
            return $"the sum of {fib.Count} items is {fib.Sum()}";
        }

    }

    //public static partial class Extensionmethods
    //{
        
    //}
}
